name: Fetch and Commit CSV File

on:
  schedule:
    - cron: "0 */6 * * *" # Runs every 6 hours
  workflow_dispatch: # Allows manual trigger

permissions:
  contents: write # Grants write access to the repository contents

jobs:
  fetch-and-commit:
    runs-on: ubuntu-latest
    env:
      DEBUG: true # Set DEBUG=true for the entire job

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '24'

    - name: Install dependencies
      run: |
        npm ci || npm install

    - name: Scrape the CSV URL, then download file
      run: |
        echo "Running npm run pull..."
        npm run pull

    - name: Process downloaded CSV
      run: |
        echo "Running npm run process..."
        npm run process

    - name: Check for changes and commit if needed
      shell: pwsh
      run: |
        # Configure Git
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        # Add files to staging
        ## - Original CSV
        git add amateur-callsigns-raw.csv
        ## - Metadata about the download
        git add metadata-download-info.json
        ## - Processed / generated files that are derived from the original CSV
        git add amateur-callsigns-sorted.csv
        git add amateur-callsigns.json
        git add amateur-callsigns-sorted.json
        ## - Metadata about all the data files
        git add metadata-amateur-callsigns.json
        
        # Check if there are changes to commit
        $status = git status --porcelain
        if ($status) {
          Write-Host "Changes detected. Committing updates..."
          
          # Read metadata for commit message
          $metadata = Get-Content "metadata-amateur-callsigns.json" | ConvertFrom-Json
          
          # Create a detailed commit message based on what changed
          $commitMsg = "Update amateur callsigns CSV"
          
          # Add Ofcom's last updated date if available
          if ($metadata.ofcomLastUpdate) {
            $commitMsg += " (Ofcom updated: $($metadata.ofcomLastUpdate))"
          } else {
            $commitMsg += " (Ofcom last update: unknown)"
          }
          
          # Add file size info
          if ($metadata.originalCsvSize) {
            $fileSizeMB = [math]::Round($metadata.originalCsvSize / 1MB, 2)
            $commitMsg += ", size: ${fileSizeMB}MB"
          } else {
            $commitMsg += ", size: unknown"
          }
          
          # Commit and push
          git commit -m "$commitMsg"
          git push
          
          Write-Host "Changes committed and pushed successfully."
        } else {
          Write-Host "No changes detected. Skipping commit."
        }
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
